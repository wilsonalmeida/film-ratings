{:duct.profile/base
 {:duct.core/project-ns film-ratings
  :duct.handler/root {:middleware [#ig/ref :film-ratings.handler.middleware/anti-forgery-field]}
  :duct.router/ataraxy
  {:routes
   {[:get "/"] [:film-ratings.handler.index/index]
    ;; [:get "/"] ^:anti-forgery-token [:film-ratings.handler.index/index]
    [:get  "/add-film"]  [:film-ratings.handler.film/show-create]
    [:post "/add-film" {film-form :form-params}]
    [:film-ratings.handler.film/create film-form]
    ;;    [:post "/edit-film/" id] [:film-ratings.handler.film/edit ^int id]
    [:delete "/film/" name] [:film-ratings.handler.film/destroy name]
    [:get "/list-films"]  [:film-ratings.handler.film/list]}
   ;; :middleware {:anti-forgery-token
   ;;              #ig/ref :film-ratings.handler.middleware/anti-forgery-field}
   }

  :film-ratings.handler.middleware/anti-forgery-field {}
  :film-ratings.handler.index/index  {}
  :film-ratings.handler.film/show-create {}
  :film-ratings.handler.film/create {:db #ig/ref :duct.database/sql}
  :film-ratings.handler.film/list {:db #ig/ref :duct.database/sql}
  ;; :film-ratings.handler.film/edit-film {:db #ig/ref :duct.database/sql}
  :film-ratings.handler.film/destroy {:db #ig/ref :duct.database/sql}

  :duct.migrator/ragtime
  {:migrations [#ig/ref :film-ratings.migrations/create-film]}

  [:duct.migrator.ragtime/sql :film-ratings.migrations/create-film]
  {:up ["CREATE TABLE film (id SERIAL PRIMARY KEY, name TEXT UNIQUE,
  description TEXT, rating INTEGER)"]
   :down ["DROP TABLE film"]
   }
  ;; Disable anti-forgery check for testing from command line httpie
  ;; :duct.middleware.web/defaults {:security {:anti-forgery false}}
  ;; :duct.middleware.web/defaults {:static {:resources ["film_ratings/resources/film_ratings/public"]}}
  }

 :duct.profile/dev   #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/prod
 {
  :duct.logger/timbre
  {:level     :info
   :appenders {:spit #ig/ref :duct.logger.timbre/spit
               :brief #ig/ref :duct.logger.timbre/brief}
   :timestamp-opts {:pattern "dd/MM/yyyy HH:mm:ss ZZ"
                    :locale :jvm-default}}

  :duct.logger.timbre/spit {:fname "logs/production.log"}
  :duct.logger.timbre/brief {:min-level :report}

  ;; Use either this format

  ;; :duct.database/sql
  ;; {:connection-uri #duct/env ["JDBC_DATABASE_URL"]}
  ;; where connection-uri contains:
  ;; "jdbc:postgresql://<host>:<port>/<db>?user=<username>&password=<password>";

  ;; Or use this format
  :duct.database/sql {:adapter "postgresql"
                      :port-number #duct/env [ "DB_PORT" :or "5432" ]
                      :server-name #duct/env [ "DB_HOST" ]
                      :database-name "filmdb"
                      :username "filmuser"
                      :password #duct/env [ "DB_PASSWORD" ]
                      }

  :duct.database.sql/hikaricp
  {:auto-commit        true
   :read-only          false
   :connection-timeout 30000
   :validation-timeout 5000
   :idle-timeout       600000
   :max-lifetime       1800000
   :minimum-idle       10
   :maximum-pool-size  10
   :pool-name          "db-pool"
   ;; :adapter            "postgresql"
   ;; :username           "filmuser"
   ;; :password           "wilson"
   ;; :database-name      "filmdb"
   ;; :server-name        "localhost"
   ;; :port-number        5432
   :register-mbeans    false
   }
  }

 :duct.module/logging {}

 ;; :duct.module.web/api {}
 :duct.module.web/site {}

 :duct.module/sql {}

 }
